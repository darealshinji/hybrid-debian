
# Copyright (C) 2014-2017 djcj <djcj@gmx.de>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

QT=521
bin="$HOME/.hybrid-bin"
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$bin/dvdcss"

printHelp () {
app="$(basename "$0")"
echo \
"usage: $app [options] [<QT options>]

options: --log
         --no-update
         --disable-updates
         --enable-updates
         --rollback
         --help | -h
         --version | -V

Run 'man $app' for more information."
exit 0
}

log="disabled"
update="enabled"
rollback="no"
print_version="no"
for opt; do
    case "$opt" in
        --help|-help|-h)
            printHelp
            ;;
        --log|-log)
            log="enabled"
            ;;
        --no-update|-no-update)
            update="disabled"
            ;;
        --disable-updates)
            touch "$bin/.disable-updates"
            echo "automatic updates: DISABLED"
            exit 0
            ;;
        --enable-updates)
            rm -f "$bin/.disable-updates"
            echo "automatic updates: ENABLED"
            exit 0
            ;;
        --rollback)
            rollback="yes"
            ;;
        --version|-V)
            print_version="yes"
            ;;
        *)
            ;;
    esac
done


conf="$HOME/.hybrid"
hybrid="$bin/Hybrid-$QT"
url="http://www.selur.de/sites/default/files/hybrid_downloads"

avs_version_url="https://raw.githubusercontent.com/darealshinji/hybrid-debian/avisynth-extension/version"
avs_extension_path="$bin/avisynth"
# The main reason to keep this a separate file in a separate package is
# that this package will install Wine as a dependency, which comes in a
# huge bunch of individual packages.
avs_install_script="$prefix/share/hybrid-avisynth-extension/install-hybrid-avisynth-extension.sh"


install_hybrid () {
    title=$1
    version=$2

    YY=$(echo $version | cut -d'.' -f1 | tail -c+3)
    MM=$(echo $version | cut -d'.' -f2)
    DD=$(echo $version | cut -d'.' -f3)
    rev=$(echo $version | cut -d'.' -f4)
    if [ $rev -lt 2 ] ; then rev=""; fi

    version=$YY$MM$DD$rev

    #if [ "$(uname -m)" != "x86_64" ] ; then
    #    zenity --warning --text '32 bit GNU/Linux is no longer supported!\nUpgrade your OS.'
    #    exit 1
    #fi

    zip="Hybrid_${version}_64bit_binary_qt${QT}.zip"

    mkdir -p "$bin"
    cd "$bin"

    # check if the zip is available
    wget -q -t 1 --timeout=4 --spider $url/$zip

    if [ $? = 0 ] ; then
        test -f "Hybrid-$QT" && mv -f "Hybrid-$QT" "Hybrid-$QT.old"
        rm -f *.zip
        wget $url/$zip 2>&1 | sed -u 's/^[a-zA-Z\-].*//; s/.* \{1,2\}\([0-9]\{1,3\}\)%.*/\1\n#Downloading... \1%/; s/^20[0-9][0-9].*/#Done./' | \
            zenity --progress \
                   --title="$title" \
                   --text "Wait a few seconds until the download has finished ..." \
                   --auto-close
        unzip $zip
        mv Hybrid Hybrid-$QT
        chmod 0755 Hybrid-$QT
        rm -f *.zip
    fi
}


# Get version strings
if [ -f "$hybrid" ] ; then
    current_ver=$("$hybrid" -version | cut -d' ' -f3)
else
    current_ver=0
fi
current_ver_np=$(echo $current_ver | tr -d .)
available_ver=$(wget -q -t 1 --timeout=2 -O - $url/version.txt)
available_ver_np=$(echo $available_ver | tr -d .)


# Roll back to previous release version
if [ "$rollback" = "yes" ] ; then
    if [ -f "$hybrid.old" ] ; then
        cd "$bin"
        mv -f "Hybrid-$QT.old" "Hybrid-$QT"
        chmod 0755 Hybrid-$QT
        current_ver=$("$hybrid" -version | cut -d' ' -f3)
        echo "Switched back to Hybrid version $current_ver"
        touch "$bin/.disable-updates"
        echo "automatic updates: DISABLED"
        exit 0
    else
        echo "No previous version available as backup."
        exit 1
    fi
fi


# Check for updates
if [ -f "$hybrid" ] ; then
    test -f "$bin/.disable-updates" && update="disabled"
    if [ "$update" = "enabled" ] ; then
        if [ -z $available_ver ] ; then
            echo "Couldn't get the version string of the current release."
            echo "Are you connected to the Internet?"
        elif [ $available_ver_np -gt $current_ver_np ] ; then
            install_hybrid "Update Hybrid (Qt $QT) to rev $available_ver" $available_ver
        fi
    fi
else
    install_hybrid "Install Hybrid (Qt $QT) rev $available_ver" $available_ver
fi


# Check for AviSynth extension
if [ -f "$avs_install_script" ] ; then
    avs_available_ver=$(wget -q -t 1 --timeout=2 -O - http://www.selur.de/downloads | \
      grep -o '/avisynthExtension_[0-7]*\.7z' | sed 's|^.*avisynthExtension_||; s|\.7z.*||g')
    if [ -z $avs_available_ver ] ; then
      avs_available_ver=$(wget -q -t 1 --timeout=2 -O - $avs_version_url)
    fi

    if [ -z $avs_available_ver ] ; then
        echo "Couldn't get the version string of the latest AviSynth extension."
        echo "Are you connected to the Internet?"
    else
        if [ -f "$avs_extension_path/version" ] ; then
            avs_current_ver=$(cat "$avs_extension_path/version")
            avs_title="Update AviSynth extension"
        else
            avs_current_ver=0
            avs_title="Install AviSynth extension"
        fi

        # Install/Update AviSynth extension
        if [ $avs_available_ver -gt $avs_current_ver ] ; then
            "$avs_install_script" "$avs_title" $avs_available_ver
        fi

        if [ ! -f "$conf/misc.ini" ] ; then
            mkdir -p "$conf"
            cat > "$conf/misc.ini" << EOF
[General]
avisynthOnLinux=true
avisynthExtensionPath="$avs_extension_path/avisynthPlugins"
EOF
        fi

        system32="$HOME/.wine/drive_c/windows/system32"
        mkdir -p "$system32"
        cp -f "$avs_extension_path/avisynthPlugins/avisynth.dll" "$system32"
        cp -f "$avs_extension_path/avisynthPlugins/DevIL.dll" "$system32"
    fi
else
    rm -rf "$bin/avisynth" "$bin/avisynthPlugins" "$bin/platforms"
    rm -f "$bin"/*.exe "$bin"/*.dll "$bin"/AVSMeter* "$bin"/*.7z
    if [ -f "$conf/misc.ini" ] ; then
        sed -i "s/^avisynthOnLinux=true/avisynthOnLinux=false/;" "$conf/misc.ini"
    fi
fi


# Check for tools updater
if test "$update" = "enabled" && which hybrid-update-tools >/dev/null ; then
    hybrid-update-tools
fi


# check if DE is KDE
# if we're using Qt5 Hybrid and we're not on KDE,
# then run the app with '-style=gtk'
xprop -name "kwin" >/dev/null 2>&1
if [ $(echo $?) = 1 ] && [ $QT = 521 ] ; then
    gtk_style='-style=gtk'
fi


# start Hybrid
if [ "$print_version" = "yes" ] ; then
    "$hybrid" -version
    exit 0
fi
if [ "$log" = "enabled" ] ; then
    mkdir -p "$conf/logs"
    date=$(date +"%Y-%m-%d_%H-%M-%S")
    "$hybrid" $gtk_style "$@" | tee "$conf/logs/hybrid-qt$QT-$date.log"
else
    "$hybrid" $gtk_style "$@"
fi
